/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/device/button_left.glb -t -r public
*/

import * as THREE from 'three'
import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    button_left: THREE.Mesh
  }
  materials: {
    ['Material.010']: THREE.MeshStandardMaterial
  }
}

export function Button_left(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/device/button_left.glb') as GLTFResult
  const [active, setActive] = useState(false)
  return (
    <group {...props} dispose={null} scale={300}>
      <mesh position={active ? [0, -0.07, -0.032] : [0, -0.07, -0.03]}
      onPointerDown={(event) => setActive(!active)} onPointerUp={(event) => setActive(!active)} geometry={nodes.button_left.geometry} material={materials['Material.010']}  rotation={[1.95, 0, 0]} scale={0.01} 
      />
    </group>
    
  )
}


useGLTF.preload('/device/button_left.glb')
